{"version":3,"sources":["serviceWorker.js","theme/colors.js","theme/provider.jsx","recipes/index.js","recipes/risotto.js","recipes/boeuf-bourguignon.js","components/header.jsx","components/footer.jsx","components/recipe.jsx","components/home.jsx","components/router.jsx","components/app.jsx","index.js"],"names":["Boolean","window","location","hostname","match","colors","primary","secondary","memo","children","theme","headerHeight","footerHeight","recipes","id","title","steps","description","HeaderWrapper","styled","header","Title","Link","DrawerTrigger","button","Drawer","div","visible","css","RecipeLink","Header","className","useState","isDrawerVisible","setIsDrawerVisible","handleDrawerToggle","to","onClick","map","key","FooterWrapper","footer","Footer","RecipeContainer","RecipeTitle","StepContainer","StepMark","RevealFooter","Recipe","useParams","currentRecipe","find","recipe","nbOfSteps","length","index","Home","height","RegularContainer","AppRouter","path","exact","GlobalWrapper","MainRouter","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fcd722d5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const colors = {\n  primary: \"#32936F\",\n  secondary: \"#124559\"\n};\n\nexport default colors;\n","// @flow\n\nimport React, { memo, type Node } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport colors from \"theme/colors.js\";\n\ntype Props = {|\n  children?: Node\n|};\n\nconst GlobalTheme = ({ children }) => {\n  const theme = {\n    colors,\n    headerHeight: \"80px\",\n    footerHeight: \"200px\"\n  };\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default memo<Props>(GlobalTheme);\n","import risotto from \"recipes/risotto\";\nimport boeufBourguignon from \"recipes/boeuf-bourguignon\";\n\nconst recipes = [risotto, boeufBourguignon];\n\nexport default recipes;\n","const id = \"risotto\";\n\nconst risotto = {\n  id,\n  title: \"Risotto bourguignon\",\n  steps: [\n    { title: \"faire une petite pétanque\", description: \"blablabla\" },\n    { title: \"boire un ricard\", description: \"blablabla\" },\n    { title: \"tu tires?\", description: \"et ouai maggle\" },\n    { title: \"tu pointes?\", description: \"et ouai maggle\" }\n  ]\n};\n\nexport default risotto;\n","const id = \"boeuf-bourguignon\";\n\nconst boeufBourguignon = {\n  id: id,\n  title: \"Boeuf bourguignon\",\n  steps: [\n    { title: \"faire bouillir l'eau\", description: \"blablabla\" },\n    { title: \"couper les patates\", description: \"blablabla\" },\n    { title: \"couper les oignons\", description: \"et ouai maggle\" }\n  ]\n};\n\nexport default boeufBourguignon;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport recipes from \"recipes\";\n\nconst HeaderWrapper = styled.header`\n  position: sticky;\n  flex-shrink: 0;\n  top: 0;\n  width: 100vw;\n  height: ${({ theme }) => theme.headerHeight};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  padding: 0 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 1;\n`;\n\nconst Title = styled(Link)`\n  font-size: 24px;\n  color: white;\n  text-decoration: none;\n`;\n\nconst DrawerTrigger = styled.button`\n  border: 1px solid white;\n  border-radius: 3px;\n  padding: 10px 15px;\n  color: white;\n  background-color: transparent;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background-color: white;\n    color: ${({ theme }) => theme.colors.primary};\n    transition: background-color 100ms ease, color 100ms ease;\n  }\n`;\n\nconst Drawer = styled.div`\n  width: 300px;\n  max-width: 90vw;\n  height: calc(100vh - ${({ theme }) => theme.headerHeight});\n  background-color: ${({ theme }) => theme.colors.secondary};\n  position: absolute;\n  top: ${({ theme }) => theme.headerHeight};\n  right: 0;\n  transform: translateX(300px);\n  transition: transform 300ms ease;\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 20px 0;\n\n  ${({ visible }) =>\n    visible &&\n    css`\n      transform: translateX(0);\n      box-shadow: -1px 10px 13px 4px #0000006b;\n    `}\n`;\n\nconst RecipeLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid lightgrey;\n  &:focus {\n    outline: O;\n  }\n`;\n\nconst Header = ({ className }) => {\n  const [isDrawerVisible, setIsDrawerVisible] = useState(false);\n\n  const handleDrawerToggle = () => setIsDrawerVisible(!isDrawerVisible);\n\n  return (\n    <HeaderWrapper className={className}>\n      <Title to=\"/\">Chambi cuisine</Title>\n      <DrawerTrigger onClick={handleDrawerToggle}>Les recettes</DrawerTrigger>\n      <Drawer visible={isDrawerVisible}>\n        {recipes.map(({ id, title }) => (\n          <RecipeLink\n            key={id}\n            to={`/recipes/${id}`}\n            onClick={handleDrawerToggle}\n          >\n            {title}\n          </RecipeLink>\n        ))}\n      </Drawer>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterWrapper = styled.footer`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: ${({ theme }) => theme.footerHeight};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  z-index: -1;\n`;\n\nconst Footer = ({ className }) => (\n  <FooterWrapper className={className}>gros footer maggle</FooterWrapper>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\n\nimport recipes from \"recipes\";\n\nconst RecipeContainer = styled.div`\n  scroll-snap-type: y mandatory;\n  height: 100%;\n  overflow-y: scroll;\n`;\n\nconst RecipeTitle = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  color: black;\n  font-size: 26px;\n  z-index: 1;\n`;\n\nconst StepContainer = styled.div`\n  min-height: 100%;\n  width: 100vw;\n  scroll-snap-align: start;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  background-color: white;\n`;\n\nconst StepMark = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nconst RevealFooter = styled.div`\n  height: ${({ theme }) => theme.footerHeight};\n  background-color: transparent;\n  scroll-snap-align: start;\n`;\n\nconst Recipe = ({ className, footerHeight }) => {\n  let { id } = useParams();\n\n  const currentRecipe = recipes.find(recipe => recipe.id === id);\n  const nbOfSteps = currentRecipe.steps.length;\n\n  return (\n    <RecipeContainer className={className}>\n      <RecipeTitle>{currentRecipe.title}</RecipeTitle>\n      {currentRecipe.steps.map(({ title, description }, index) => (\n        <StepContainer key={`currentRecipe.id_${index}`}>\n          <StepMark>{`${index + 1} / ${nbOfSteps}`}</StepMark>\n          <div>{title}</div>\n          <div>{description}</div>\n        </StepContainer>\n      ))}\n      <RevealFooter />\n    </RecipeContainer>\n  );\n};\n\nexport default Recipe;\n","import React from \"react\";\n\nconst Home = ({ className, height }) => <div>home</div>;\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Recipe from \"components/recipe.jsx\";\nimport Home from \"components/home.jsx\";\n\nconst RegularContainer = styled.div`\n  height: calc(100vh - ${({ theme }) => theme.headerHeight});\n  background-color: white;\n  margin-bottom: ${({ theme }) => theme.footerHeight};\n`;\n\nconst AppRouter = ({ className }) => (\n  <div className={className}>\n    <Switch>\n      <Route path=\"/recipes/:id\" exact>\n        <Recipe />\n      </Route>\n      <Route path=\"/\">\n        <RegularContainer>\n          <Home />\n        </RegularContainer>\n      </Route>\n    </Switch>\n  </div>\n);\n\nexport default AppRouter;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport GlobalTheme from \"theme/provider.jsx\";\n\nimport Header from \"components/header.jsx\";\nimport Footer from \"components/footer.jsx\";\n\nimport AppRouter from \"components/router.jsx\";\n\nconst GlobalWrapper = styled.div`\n  position: relative;\n  width: 100vw;\n  overflow-x: hidden;\n`;\n\nconst MainRouter = styled(AppRouter)`\n  height: calc(100vh - ${({ theme }) => theme.headerHeight});\n  z-index: 0;\n  overflow-y: scroll;\n`;\n\nconst App = () => {\n  return (\n    <GlobalTheme>\n      <Router>\n        <GlobalWrapper>\n          <Header />\n          <MainRouter />\n          <Footer />\n        </GlobalWrapper>\n      </Router>\n    </GlobalTheme>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"components/app.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}