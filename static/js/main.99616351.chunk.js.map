{"version":3,"sources":["serviceWorker.js","theme/colors.js","theme/provider.jsx","recipes/index.js","recipes/risotto.js","recipes/boeuf-bourguignon.js","components/recipe.jsx","components/header.jsx","components/footer.jsx","components/home.jsx","components/app.jsx","index.js"],"names":["Boolean","window","location","hostname","match","colors","primary","secondary","memo","children","theme","recipes","id","title","steps","description","myRecipe","RecipeContainer","styled","div","RecipeTitle","StepContainer","StepMark","Recipe","useParams","nbOfSteps","length","currentRecipe","find","recipe","map","index","HeaderWrapper","header","height","Title","Link","DrawerTrigger","button","Drawer","visible","css","RecipeLink","Header","className","useState","isDrawerVisible","setIsDrawerVisible","handleDrawerToggle","to","onClick","key","FooterWrapper","footer","Footer","Home","GlobalWrapper","Main","main","App","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.99616351.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const colors = {\n  primary: \"#32936F\",\n  secondary: \"#124559\"\n};\n\nexport default colors;\n","// @flow\n\nimport React, { memo, type Node } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport colors from \"theme/colors.js\";\n\ntype Props = {|\n  children?: Node\n|};\n\nconst GlobalTheme = ({ children }) => {\n  const theme = {\n    colors\n  };\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default memo<Props>(GlobalTheme);\n","import risotto from \"recipes/risotto\";\nimport boeufBourguignon from \"recipes/boeuf-bourguignon\";\n\nconst recipes = [risotto, boeufBourguignon];\n\nexport default recipes;\n","const id = \"risotto\";\n\nconst risotto = {\n  id,\n  title: \"Risotto bourguignon\",\n  steps: [\n    { title: \"faire une petite p√©tanque\", description: \"blablabla\" },\n    { title: \"boire un ricard\", description: \"blablabla\" },\n    { title: \"tu tires?\", description: \"et ouai maggle\" },\n    { title: \"tu pointes?\", description: \"et ouai maggle\" }\n  ]\n};\n\nexport default risotto;\n","const id = \"boeuf-bourguignon\";\n\nconst boeufBourguignon = {\n  id: id,\n  title: \"Boeuf bourguignon\",\n  steps: [\n    { title: \"faire bouillir l'eau\", description: \"blablabla\" },\n    { title: \"couper les patates\", description: \"blablabla\" },\n    { title: \"couper les oignons\", description: \"et ouai maggle\" }\n  ]\n};\n\nexport default boeufBourguignon;\n","import React, { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport recipes from \"recipes\";\n\nconst myRecipe = [\n  { title: \"faire bouillir l'eau\", description: \"blablabla\" },\n  { title: \"couper les patates\", description: \"blablabla\" },\n  { title: \"couper les oignons\", description: \"et ouai maggle\" }\n];\n\nconst RecipeContainer = styled.div`\n  scroll-snap-type: y mandatory;\n  height: 100%;\n  overflow-y: scroll;\n`;\n\nconst RecipeTitle = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  color: black;\n  font-size: 26px;\n`;\n\nconst StepContainer = styled.div`\n  min-height: 100%;\n  width: 100vw;\n  scroll-snap-align: start;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nconst StepMark = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nconst Recipe = () => {\n  let { id } = useParams();\n  const nbOfSteps = myRecipe.length;\n\n  const currentRecipe = recipes.find(recipe => recipe.id === id);\n  return (\n    <RecipeContainer>\n      <RecipeTitle>{currentRecipe.title}</RecipeTitle>\n      {currentRecipe.steps.map(({ title, description }, index) => (\n        <StepContainer>\n          <StepMark>{`${index + 1} / ${nbOfSteps}`}</StepMark>\n          <div>{title}</div>\n          <div>{description}</div>\n        </StepContainer>\n      ))}\n    </RecipeContainer>\n  );\n};\n\nexport default Recipe;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport recipes from \"recipes\";\n\nconst HeaderWrapper = styled.header`\n  position: sticky;\n  flex-shrink: 0;\n  top: 0;\n  width: 100vw;\n  height: ${({ height }) => height};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  padding: 0 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 1;\n`;\n\nconst Title = styled(Link)`\n  font-size: 24px;\n  color: white;\n  text-decoration: none;\n`;\n\nconst DrawerTrigger = styled.button`\n  border: 1px solid white;\n  border-radius: 3px;\n  padding: 10px 15px;\n  color: white;\n  background-color: transparent;\n  cursor: pointer;\n  &:focus {\n    outline: O;\n  }\n  &:hover {\n    background-color: white;\n    color: ${({ theme }) => theme.colors.primary};\n    transition: background-color 100ms ease, color 100ms ease;\n  }\n`;\n\nconst Drawer = styled.div`\n  width: 300px;\n  height: calc(100vh - ${({ height }) => height});\n  background-color: ${({ theme }) => theme.colors.secondary};\n  position: absolute;\n  top: ${({ height }) => height};\n  right: 0;\n  transform: translateX(300px);\n  transition: transform 300ms ease;\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 20px 0;\n  ${({ visible }) =>\n    visible &&\n    css`\n      transform: translateX(0);\n    `}\n`;\n\nconst RecipeLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid lightgrey;\n  &:focus {\n    outline: O;\n  }\n`;\n\nconst Header = ({ className, height }) => {\n  const [isDrawerVisible, setIsDrawerVisible] = useState(false);\n\n  const handleDrawerToggle = () => setIsDrawerVisible(!isDrawerVisible);\n\n  return (\n    <HeaderWrapper className={className} height={height}>\n      <Title to=\"/\">Chambi cuisine</Title>\n      <DrawerTrigger onClick={handleDrawerToggle}>Les recettes</DrawerTrigger>\n      <Drawer height={height} visible={isDrawerVisible}>\n        {recipes.map(({ id, title }) => (\n          <RecipeLink\n            key={id}\n            to={`/recipes/${id}`}\n            onClick={handleDrawerToggle}\n          >\n            {title}\n          </RecipeLink>\n        ))}\n      </Drawer>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterWrapper = styled.footer`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: ${({ height }) => height};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  z-index: -1;\n`;\n\nconst Footer = ({ className, height }) => (\n  <FooterWrapper className={className} height={height}>\n    gros footer maggle\n  </FooterWrapper>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Home = ({ className, height }) => <div>home</div>;\n\nexport default Home;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport GlobalTheme from \"theme/provider.jsx\";\n\nimport Recipe from \"components/recipe.jsx\";\nimport Header from \"components/header.jsx\";\nimport Footer from \"components/footer.jsx\";\n\nimport Home from \"components/home.jsx\";\n\nconst headerHeight = \"80px\";\nconst footerHeight = \"200px\";\n\nconst GlobalWrapper = styled.div`\n  position: relative;\n  height: calc(100vh + ${footerHeight});\n  width: 100vw;\n  display: flex;\n  flex-flow: column nowrap;\n  overflow: hidden;\n`;\n\nconst Main = styled.main`\n  flex-grow: 1;\n  height: 100%;\n  background-color: white;\n  margin-bottom: ${footerHeight};\n  z-index: 0;\n`;\n\nconst App = () => (\n  <GlobalTheme>\n    <Router>\n      <GlobalWrapper>\n        <Header height={headerHeight} />\n        <Main>\n          <Switch>\n            <Route path=\"/recipes/:id\" children={<Recipe />} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Main>\n        <Footer height={footerHeight} />\n      </GlobalWrapper>\n    </Router>\n  </GlobalTheme>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"components/app.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}